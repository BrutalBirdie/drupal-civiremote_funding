#!/bin/bash
set -euo pipefail

YQ=$(which yq) || { echo "Error: yq not found" >&2; exit 1; }

usage() {
  cat <<EOD
Usage: $(basename "$0") -k keyword -i input_file [-o output_file]
Options -k and -i may appear multiple times.

Extracts strings from YAML files which keys ends with one of the keywords for gettext.
EOD
}

files=()
keywords=()

while [ $# -gt 0 ]; do
	case "$1" in
		-i)
			files+=("$2")
			shift 2
		;;
		-k)
			keywords+=("$2")
			shift 2
		;;
		-o)
			out="$2"
			shift 2
		;;
    -h|--help)
      usage
      exit
    ;;
		*)
			echo "Error: Invalid argument \"$1\"" >&2
			usage >&2
			exit 1
		;;
	esac
done

if [ ${#files[@]} -eq 0 ]; then
	echo "Error: No input file given" >&2
  usage >&2
	exit 1
fi

if [ ${#keywords[@]} -eq 0 ]; then
	echo "Error: No keyword given" >&2
  usage >&2
	exit 1
fi

if [ -v out ]; then
	exec >"$out"
fi

declare -A strings=()

for file in "${files[@]}"; do
	for keyword in "${keywords[@]}"; do
		while read -r string; do
			if [ -v strings["$string"] ]; then
			  if [[ ${strings["$string"]} != *" $file"* ]]; then
			    strings["$string"]+=" $file"
        fi
      else
        strings["$string"]=" $file"
      fi
		done < <("$YQ" ".. | select(has(\"$keyword\")) | select(.$keyword != \"\") | .$keyword" "$file")
	done
done

for string in "${!strings[@]}"; do
  srcFiles="${strings["$string"]}"
  echo "#:$srcFiles"
  #while read -r srcFile; do
  #  echo "#: $srcFile"
  #done < <(echo -e "$srcFiles")
  echo "msgid \"$string\""
  echo 'msgstr ""'
  echo ""
done
